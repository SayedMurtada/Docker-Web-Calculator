{"version":3,"sources":["App.js","reportWebVitals.js","index.js","Calculator.js"],"names":["App","Calculator","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","props","handleChange","event","inputName","target","name","oldInput","state","latestInput","allowNewInput","newEquation","Equation","setState","handleSubmit","preventDefault","latestEquation","result","calculateEquation","resetCal","Signs","indexOf","output","eval","toString","onSubmit","this","class","colSpan","type","id","value","readOnly","scope","onClick","rowSpan"],"mappings":"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","file":"static/js/main.07a1c518.chunk.js","sourcesContent":["// export default App;\nimport React, { Component } from 'react';\nimport Calculator from './Calculator';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Calculator></Calculator>\n      </div>\n    )\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Component } from 'react'\r\n\r\n/* the remaining job is to create a test using jest\r\n    and test the code   Done\r\n    then build using npm build\r\n    then create an image in docker and see if it works \r\n    then push the code to github\r\n    then run the code in aws\r\n    do not forget to stop the aws after finishing the work\r\n*/\r\n\r\n\r\nexport default class Calculator extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {Equation:\"\", latestInput:\"2\"};\r\n    }\r\n\r\n    allowNewInput(inputName, oldInput){\r\n        let Signs = [\"+\",\"-\", \"*\", \"/\", \".\"];\r\n        let Numbers = [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"]\r\n        let result = (Signs.indexOf(oldInput) === -1 && Signs.indexOf(inputName)!==-1) || Numbers.indexOf(inputName) !== -1;\r\n        return result;\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        let inputName = event.target.name;\r\n        let oldInput = this.state.latestInput;\r\n        if (this.allowNewInput(inputName, oldInput)){\r\n            let oldEquation = this.state.Equation;\r\n            let newEquation = oldEquation+inputName;\r\n            this.setState({Equation:newEquation, latestInput:inputName});\r\n        }\r\n    }\r\n\r\n    calculateEquation(Equation){\r\n        var output = eval(Equation);\r\n        return output.toString();\r\n    }\r\n\r\n    handleSubmit = (event)=>{\r\n        event.preventDefault();\r\n        let latestEquation = this.state.Equation;\r\n        let result = this.calculateEquation(latestEquation);\r\n        this.setState({Equation:result});\r\n    }\r\n    resetCal = (event) =>{\r\n        this.setState({Equation:\"\", latestInput:\"\"})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <h1>Welcome to My Calculator</h1>\r\n                <table class=\"table table-dark w-25 h-25\">\r\n                    {/* Output Row */}\r\n                    <thead>\r\n                        <th colSpan=\"4\">\r\n                            <input type=\"text\" id=\"Equation\" name =\"Equation\" class=\"w-100\" value={this.state.Equation} readOnly />\r\n                        </th>\r\n                    </thead>\r\n                    \r\n                    {/* First Row */}\r\n                    <tbody>\r\n                        <tr>\r\n                            <td scope=\"col\"><input type=\"button\" id=\"Numbers\" name=\"+\" value=\"+\" onClick={this.handleChange}/></td>\r\n                            <td scope=\"col\"><input type=\"button\" id=\"Numbers\" name=\"-\" value=\"-\" onClick={this.handleChange}/></td>\r\n                            <td scope=\"col\"><input type=\"button\" id=\"Numbers\" name=\"*\" value=\"x\" onClick={this.handleChange}/></td>\r\n                            <td scope=\"col\"><input type=\"button\" id=\"Numbers\" name=\"/\" value=\"รท\" onClick={this.handleChange}/></td>\r\n                        </tr>\r\n                        {/* Second Row */}\r\n                        <tr>\r\n                            <td><input type=\"button\" id=\"Numbers\" name=\"7\" value=\"7\" onClick={this.handleChange}/></td>\r\n                            <td><input type=\"button\" id=\"Numbers\" name=\"8\" value=\"8\" onClick={this.handleChange}/></td>\r\n                            <td><input type=\"button\" id=\"Numbers\" name=\"9\" value=\"9\" onClick={this.handleChange}/></td>\r\n                            <td id=\"tdEqual\" rowSpan=\"4\"><input type=\"submit\" id=\"equal\" value=\"=\"/></td>\r\n\r\n                        </tr>\r\n                        {/* Third Row */}\r\n                        <tr>\r\n                            <td><input type=\"button\" id=\"Numbers\" name=\"4\" value=\"4\" onClick={this.handleChange}/></td>\r\n                            <td><input type=\"button\" id=\"Numbers\" name=\"5\" value=\"5\" onClick={this.handleChange}/></td>\r\n                            <td><input type=\"button\" id=\"Numbers\" name=\"6\" value=\"6\" onClick={this.handleChange}/></td>\r\n                        </tr>\r\n                        {/* Fourth Row */}\r\n                        <tr>\r\n                            <td><input type=\"button\" id=\"Numbers\" name=\"1\" value=\"1\" onClick={this.handleChange}/></td>\r\n                            <td><input type=\"button\" id=\"Numbers\" name=\"2\" value=\"2\" onClick={this.handleChange}/></td>\r\n                            <td><input type=\"button\" id=\"Numbers\" name=\"3\" value=\"3\" onClick={this.handleChange}/></td>\r\n                        </tr>\r\n                        {/* Fifth Row */}\r\n                        <tr>\r\n                            <td><input type=\"button\" id=\"Numbers\" name=\"0\" value=\"0\" onClick={this.handleChange}/></td>\r\n                            <td><input type=\"button\" id=\"Numbers\" name=\".\" value=\".\" onClick={this.handleChange}/></td>\r\n                            <td><input type=\"reset\" id=\"Numbers\" class=\"btn btn-danger\" value=\"AC\" onClick={this.resetCal}/></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n            \r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}